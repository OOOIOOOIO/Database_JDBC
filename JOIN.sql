SELECT * FROM PLAYER;
SELECT * FROM TEAM;

SELECT 
	p.PLAYER_NAME,
	t.TEAM_NAME 	
FROM PLAYER p, TEAM t;

--이너 조인
--ANSI
SELECT 
	p.PLAYER_NAME,
	t.TEAM_NAME 
FROM  PLAYER p
	INNER JOIN TEAM t ON p.TEAM_ID = t.TEAM_ID
WHERE t.TEAM_ID = 'K01';

--Oracle
SELECT 
	p.PLAYER_NAME,
	t.TEAM_NAME
FROM PLAYER p, TEAM t 
WHERE p.TEAM_ID = t.TEAM_ID;


--외부 조인
SELECT NAME, PROFNO FROM T_PROFESSOR;
SELECT NAME, PROFNO FROM T_STUDENT;

SELECT 
	ts.NAME 학생이름,
	NVL(tp.NAME, '담당교수 없음') 교수이름
FROM T_STUDENT ts 
	LEFT OUTER JOIN T_PROFESSOR tp ON  ts.PROFNO = tp.PROFNO ;



-- 서브쿼리
SELECT 
	PLAYER_ID ,
	TEAM_ID ,
	HEIGHT ,
	(SELECT AVG(HEIGHT) 
	FROM PLAYER)
FROM PLAYER
WHERE HEIGHT > (SELECT AVG(HEIGHT) FROM PLAYER);

SELECT * 
FROM (SELECT PLAYER_ID, PLAYER_NAME, TEAM_ID, HEIGHT FROM PLAYER);

----------------------문제-----------------------------
--EMP,DEPT / 각 사원들의 이름, 부서번호, 근무지역 검색
SELECT  * FROM EMP;
SELECT * FROM DEPT;

SELECT
	e.ENAME,
	d.DEPTNO,
	d.LOC
FROM EMP e
	JOIN DEPT d ON e.DEPTNO=d.DEPTNO;

--EMPLOYEES / 평균급여보다 낮은 사람들의 급여를 10% 인상하기(51행)
SELECT * FROM EMPLOYEES e;

UPDATE EMPLOYEES
SET SALARY = 1.1*SALARY
WHERE SALARY < (SELECT AVG(SALARY) FROM EMPLOYEES);

--PLAYER, TEAM / 송종국 선수가 속한 팀의 전화번호 검색
SELECT * FROM PLAYER;
SELECT * FROM TEAM;

SELECT t.DDD || '-' || t.TEL 전화번호 
FROM PLAYER p
	JOIN TEAM t ON p.TEAM_ID = t.TEAM_ID
WHERE p.PLAYER_NAME = '송종국';

--EMPLOYEES, JOBS / 각 사원들의 이름, 직업코드, 직업명, 이메일 검색
SELECT * FROM EMPLOYEES ;
SELECT * FROM JOBS;

SELECT
	e.FIRST_NAME || ' ' || e.LAST_NAME 이름,
	e.JOB_ID,
	j.JOB_TITLE,
	e.EMAIL
FROM EMPLOYEES e
	JOIN JOBS j ON e.JOB_ID = j.JOB_ID;

--STADIUM, SCHEDULE / 경기장 중 경기 일정이 20120501 ~ 20120502 사이에 있는 경기장 검색(IN, BETWEEN사용)
SELECT * FROM STADIUM s ;
SELECT * FROM SCHEDULE s ;

SELECT *
FROM STADIUM
WHERE STADIUM_ID IN
	(SELECT STADIUM_ID FROM SCHEDULE
	WHERE SCHE_DATE BETWEEN '20120501' AND '20120502');

--정남일 선수가 소속된 팀의 선수들 검색
SELECT * FROM PLAYER ;

SELECT * 
FROM PLAYER 
WHERE TEAM_ID = (SELECT TEAM_ID FROM PLAYER WHERE PLAYER_NAME = '정남일');

--축구선수들 중 전체 평균키보다 작은 선수들 검색(키 내림차순 정렬)
SELECT * 
FROM PLAYER 
WHERE HEIGHT < (SELECT AVG(HEIGHT) FROM PLAYER)
ORDER BY HEIGHT DESC;

--T_STUDENT, T_DEPARTMENT / 학생이름, 1전공 학과번호, 1전공 학과이름 검색
SELECT
	s.NAME,
	s.DEPTNO1,
	d.DNAME
FROM T_STUDENT s
	JOIN T_DEPARTMENT d ON s.DEPTNO1 = d.DEPTNO;

--EMP, DEPT / 이름에 L이 있는 사원들의 부서명과 지역 검색
SELECT
	e.ENAME,
	d.DNAME,
	d.LOC
FROM EMP e
	JOIN DEPT d ON e.DEPTNO = d.DEPTNO
WHERE e.ENAME LIKE('%L%');

--JOBS, EMPLOYEES / 직업명에 'Manager'라는 문자열이 포함된 직원들의 평균 연봉을 직업별로 검색
SELECT
	j.JOB_TITLE,
	AVG(e.SALARY)
FROM JOBS j
	JOIN EMPLOYEES e ON e.JOB_ID = j.JOB_ID
WHERE j.JOB_TITLE LIKE('%Manager%')
GROUP BY j.JOB_TITLE;

--T_STUDENT, T_DEPARTMENT, T_PROFESSOR / 학생이름, 학과이름, 지도교수 이름 검색
SELECT
	s.NAME 학생명,
	d.DNAME 학과명,
	NVL(p.NAME,'담당 없음') 지도교수
FROM T_STUDENT s
	JOIN T_DEPARTMENT d ON s.DEPTNO1 = d.DEPTNO
	LEFT OUTER JOIN T_PROFESSOR p ON s.PROFNO = p.PROFNO;

--축구선수들 중에서 각 팀별 키가 가장 큰 선수들의 팀코드, 이름, 키 검색(TEAM_ID로 정렬)
SELECT TEAM_ID, PLAYER_NAME, HEIGHT 
FROM PLAYER
WHERE (TEAM_ID, HEIGHT) IN -- 서브쿼리의 컬럼과 쌍으로 맞춰줘야됨
	(SELECT TEAM_ID, MAX(HEIGHT) FROM PLAYER
	GROUP BY TEAM_ID)
ORDER BY TEAM_ID;

--STADIUM, TEAM / 경기장코드, 경기장이름, 좌석수, 홈팀이름 검색
SELECT
	s.STADIUM_ID "경기장 코드",
	s.STADIUM_NAME "경기장 이름",
	s.SEAT_COUNT "좌석 수",
	NVL(t.TEAM_NAME,'홈팀 없음') "홈팀 명"
FROM STADIUM s
	LEFT OUTER JOIN TEAM t ON s.HOMETEAM_ID = t.TEAM_ID;

--EMPLOYEES / Den의 전화번호 앞3자리와 같은 사원들의 직업코드, 전화번호, 이름
SELECT
	JOB_ID "직업코드",
	PHONE_NUMBER "전화번호",
	FIRST_NAME || ' ' || LAST_NAME "이름"
FROM EMPLOYEES
WHERE PHONE_NUMBER LIKE(
	(SELECT SUBSTR(PHONE_NUMBER,1,3) FROM EMPLOYEES
	WHERE FIRST_NAME='Den') || '%'
);

--김영조 교수와, 김영조 교수보다 입사일이 늦지만 급여가 높은 교수들의 교수번호, 이름, 급여 검색
SELECT
	PROFNO,
	NAME,
	PAY
FROM T_PROFESSOR
WHERE HIREDATE >=
	(SELECT HIREDATE FROM T_PROFESSOR WHERE NAME='김영조')
AND PAY>=(SELECT PAY FROM T_PROFESSOR WHERE NAME='김영조');

